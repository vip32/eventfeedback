{"version":3,"sources":["app.component.ts","app.component.spec.ts","main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;YAMA;gBAAA;gBAA4B,CAAC;gBAJ7B;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,QAAQ;wBAClB,QAAQ,EAAE,qCAAqC;qBAClD,CAAC;;gCAAA;gBAC0B,mBAAC;YAAD,CAA5B,AAA6B,IAAA;YAA7B,uCAA6B,CAAA;;;;;;;;;;;;;;;;;;;;YCY7B,kBAAQ,CAAC,YAAY,EAAE;gBACrB,YAAE,CAAC,2BAA2B,EAAE;oBAC9B,gBAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;gBAC5C,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,kBAAQ,CAAC,uBAAuB,EAAE;gBAChC,YAAE,CAAC,8BAA8B,EAAE;oBACjC,gBAAM,CAAC,IAAI,4BAAY,EAAE,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;gBACrD,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,kBAAQ,CAAC,uBAAuB,EAAE;gBAEhC,YAAE,CAAC,8BAA8B,EAC/B,eAAK,CAAC,gBAAM,CAAC,CAAC,8BAAoB,CAAC,EAAE,UAAC,GAAyB;oBAE/D,GAAG,CAAC,WAAW,CAAC,4BAAY,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO;wBACxC,gBAAM,CAAC,OAAO,CAAC,iBAAiB,YAAY,4BAAY,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,4BAA4B,CAAC,CAAC;oBACrG,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEL,YAAE,CAAC,gCAAgC,EACjC,eAAK,CAAC,gBAAM,CAAC,CAAC,8BAAoB,CAAC,EAAE,UAAC,GAAyB;oBAE7D,GAAG,CAAC,WAAW,CAAC,4BAAY,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO;wBAG1C,IAAI,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,UAAA,EAAE,IAAI,OAAA,EAAE,CAAC,IAAI,KAAK,IAAI,EAAhB,CAAgB,CAAC,CAAC,aAAa,CAAC;wBAEtE,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,YAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC;wBAEhE,gBAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,iDAAiD,CAAC,CAAC;oBACpG,CAAC,CAAC,CAAC;gBAEL,CAAC,CAAC,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;YCnDH,mBAAS,CAAC,4BAAY,CAAC,CAAC","file":"main.js","sourcesContent":["import {Component} from 'angular2/core';\r\n\r\n@Component({\r\n    selector: 'my-app',\r\n    template: '<h1>My First Angular 2 App!!!1</h1>'\r\n})\r\nexport class AppComponent { }\r\n","/* tslint:disable:no-unused-variable */\r\nimport { AppComponent } from './app.component';\r\n\r\nimport {\r\n  expect, it, iit, xit,\r\n  describe, ddescribe, xdescribe,\r\n  beforeEach, beforeEachProviders, withProviders,\r\n  async, inject, TestComponentBuilder\r\n} from 'angular2/testing';\r\n\r\nimport { By }             from 'angular2/platform/browser';\r\nimport { provide }        from 'angular2/core';\r\nimport { ViewMetadata }   from 'angular2/core';\r\nimport { PromiseWrapper } from 'angular2/src/facade/promise';\r\n\r\n////////  SPECS  /////////////\r\n\r\n/// Delete this\r\ndescribe('Smoke test', () => {\r\n  it('should run a passing test', () => {\r\n    expect(true).toEqual(true, 'should pass');\r\n  });\r\n});\r\n\r\ndescribe('AppComponent with new', function () {\r\n  it('should instantiate component', () => {\r\n    expect(new AppComponent()).toBeDefined('Whoopie!');\r\n  });\r\n});\r\n\r\ndescribe('AppComponent with TCB', function () {\r\n\r\n  it('should instantiate component',\r\n    async(inject([TestComponentBuilder], (tcb: TestComponentBuilder) => {\r\n\r\n    tcb.createAsync(AppComponent).then(fixture => {\r\n      expect(fixture.componentInstance instanceof AppComponent).toBe(true, 'should create AppComponent');\r\n    });\r\n  })));\r\n\r\n  it('should have expected <h1> text',\r\n    async(inject([TestComponentBuilder], (tcb: TestComponentBuilder) => {\r\n\r\n      tcb.createAsync(AppComponent).then(fixture => {\r\n      // fixture.detectChanges();  // would need to resolve a binding but we don't have a binding\r\n\r\n      let h1 = fixture.debugElement.query(el => el.name === 'h1').nativeElement;  // it works\r\n\r\n          h1 = fixture.debugElement.query(By.css('h1')).nativeElement;            // preferred\r\n\r\n      expect(h1.innerText).toMatch(/angular 2 app/i, '<h1> should say something about \"Angular 2 App\"');\r\n    });\r\n\r\n  })));\r\n});\r\n","import {bootstrap}    from 'angular2/platform/browser';\r\nimport {AppComponent} from './app.component';\r\n\r\nbootstrap(AppComponent);\r\n"]}